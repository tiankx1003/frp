#!/bin/bash

# Function to print help text
print_help() {
    echo "Usage: frpg.sh [command] [flags]"
    echo "Available Commands:"
    echo "  server         Generate a TOML file for frps"
    echo "  client         Generate a TOML file for frpc"
    echo "Flags:"
    echo "  -n, --name             string      The proxy's name"
    echo "  -t, --type             string      The proxy's type, often 'http' or 'tcp' (optional, default: 'http')"
    echo "  -lp, --localPort       integer     The frp client local port to be proxied"
    echo "  -sp, --serverPort      integer     The frp server port used for proxying"
    echo "  -sa, --serverAddr      string      The frp server IP address (default from conf/frpg.conf)"
    echo "  -cd, --customDomains   string      Custom domains (same with frp server IP address, default from conf/frpg.conf)"
    echo "  -h, --help                         Print help text"
    echo "  -v, --version                      Print 'frp generator v1.0 developed by tiankx1003'"
    exit 0
}

# Function to generate the client TOML file
generate_client_toml() {
    cat > "toml/$name-client-$localPort.toml" << EOF
[[proxies]]
name = "$name"
type = "http"
localPort = $localPort
customDomains = ["melina"]
serverAddr = "melina"
serverPort = $serverPort
EOF
}

# Function to generate the server TOML file
generate_server_toml() {
    cat > "toml/$name-server-$serverPort.toml" << EOF
vhostHTTPPort = $localPort
bindPort = $serverPort
EOF
}

# Function to start the client or server
start_service() {
    if [ "$1" == "client" ]; then
        generate_client_toml
#        ./bin/frpc -c "toml/$name-$localPort-client.toml"
    elif [ "$1" == "server" ]; then
        generate_server_toml
#        ./bin/frps -c "toml/$name-$serverPort-server.toml"
    else
        echo "Invalid command."
        print_help
    fi
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        server|client)
            command="$1"
            shift
            ;;
        -n|--name)
            name="$2"
            shift
            shift
            ;;
        -t|--type)
            type="$2"
            shift
            shift
            ;;
        -lp|--localPort)
            localPort="$2"
            shift
            shift
            ;;
        -sp|--serverPort)
            serverPort="$2"
            shift
            shift
            ;;
        -sa|--serverAddr)
            serverAddr="$2"
            shift
            shift
            ;;
        -cd|--customDomains)
            customDomains="$2"
            shift
            shift
            ;;
        -h|--help)
            print_help
            ;;
        -v|--version)
            echo "frp generator v1.0 developed by tiankx1003"
            exit 0
            ;;
        *)
            echo "Unknown flag: $1"
            print_help
            ;;
    esac
done

# Check if command and required flags are provided
if [ -z "$command" ]; then
    echo "Command not provided."
    print_help
fi
if [ "$command" == "client" ]; then
    if [ -z "$name" ] || [ -z "$localPort" ] || [ -z "$serverPort" ]; then
        echo "Missing required flags for client command."
        print_help
    fi
elif [ "$command" == "server" ]; then
    if [ -z "$name" ] || [ -z "$localPort" ] || [ -z "$serverPort" ]; then
        echo "Missing required flags for server command."
        print_help
    fi
fi

# Start the service if start flag is provided
start_service "$command"
